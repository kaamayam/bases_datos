DROP DATABASE ferreamayadb;
CREATE DATABASE ferreamayadb;

/* Creacion clientes */
CREATE TABLE clientes(
    id int PRIMARY KEY,
    nombre varchar (100) NOT NULL,
    dir varchar (100),
    tel int UNIQUE,
    email varchar (100) UNIQUE,
    fecha_nac date,
    CHECK (id>=0),
	CHECK (tel >= 0));

INSERT INTO clientes(id, nombre,dir, tel, email,fecha_nac) 
VALUES (123, 'Pedro Pedroza Pérez', 'Cr 50 # 66-171 Robledo', 1234, 'pedro12@hotmail.com', '1990-11-23'),
(43734, 'Juan Mazo Pérez', 'Cr 51 # 80-171 Robledo', 42158, 'Juancho@gmail.com', '1996-09-23'),
(10018, 'Karina Mazo Ortega', 'Cr 70 # 77-102 Pachelly-Bello', 30483, 'cual@hotmail.com', '1996-02-19');

/* creacion locales */
CREATE TABLE locales (  
id int PRIMARY KEY,
	CHECK (id > 0)
);

INSERT INTO locales VALUES (1), (2);


/* Creacion de tabla productos */
CREATE TABLE IF NOT EXISTS productos(
codigo int PRIMARY KEY,
	nombre varchar(100) NOT NULL UNIQUE,
	tipo varchar(50) NOT NULL,
	precio numeric NOT NULL,
	descripcion varchar(1000) NOT NULL,
	CHECK (codigo > 0),
	CHECK (precio >= 0)
);

INSERT INTO productos(codigo, nombre, tipo, precio, descripcion)
VALUES (1, 'Martillo de uña', 'Herramienta', 30000, 'Este tipo de martillo es muy usado por carpinteros y encofradores en el sector de la construcción. Dispone de una cabeza de golpeo algo pequeña en un extremo y por el otro lado, unas uñas que tienen como fin hacer palanca y extraer todo tipo de elementos de fijación: grapas, clavos, tornillos, etc.'),
(2, 'Hombresolo', 'Herramienta', 20000, 'son unas pinzas que pueden ser inmovilizadas en una cierta posición para así torcer o arrancar diversos objetos o materiales'),
(3, 'Arena construcción', 'Material', 10000, 'Es un tipo de agregado fino o árido que se utiliza para fabricar hormigón, concreto y mortero; se compone de partículas de rocas trituradas que pueden ser muy pequeñas y finas');

-- Creacion de tabla ventas
CREATE TABLE IF NOT EXISTS ventas( 
	codigo int PRIMARY KEY,
    fecha date NOT NULL,
    descuento numeric NOT NULL,
    forma_pago varchar(50) NOT NULL,
    id_cliente int NOT NULL,
    id_local int NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id),
    FOREIGN KEY (id_local) REFERENCES locales(id),
    CHECK (codigo>=0)
);

INSERT INTO ventas VALUES(1,'1996-02-19', 2, 'credito', 123, 1);
INSERT INTO ventas VALUES(2,'1996-02-19', 3, 'debito', 123, 2);
INSERT INTO ventas VALUES(3, '1996-02-19', 2, 'en efectivo sumerce', 43734, 2);
INSERT INTO ventas VALUES(4, '1996-02-19', 2, 'en efectivo sumerce', 43734, 2);
INSERT INTO ventas VALUES(5, '1996-02-19', 2, 'en efectivo sumerce', 43734, 2);


-- Creacion de tabla detalle_ventas
CREATE TABLE IF NOT EXISTS detalle_ventas( 
    id_detalle int NOT NULL, 
	cod_venta int NOT NULL,
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_venta) REFERENCES ventas(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
    CHECK (cod_venta>=0),
    CHECK (id_detalle>=0),
    CHECK (cod_producto>=0),
    CHECK (cantidad>=0),
CONSTRAINT PK_DET_VENTAS PRIMARY KEY 
(cod_venta, id_detalle));
INSERT INTO detalle_ventas VALUES(1, 1, 1, 10);
INSERT INTO detalle_ventas VALUES(2, 1, 2, 20);
INSERT INTO detalle_ventas VALUES(3, 2, 3, 100);
INSERT INTO detalle_ventas VALUES(4, 2, 1, 100);
INSERT INTO detalle_ventas VALUES(5, 3, 2, 200);
INSERT INTO detalle_ventas VALUES(6, 3, 3, 100);
INSERT INTO detalle_ventas VALUES(7, 4, 1, 900);


-- Creacion de tabla empleados
CREATE TABLE IF NOT EXISTS empleados(  
id int PRIMARY KEY,
     nombre varchar (100) NOT NULL,
     tel int NOT NULL,
     salario numeric NOT NULL,
     id_local int NOT NULL,
     CHECK (id>=0),
     CHECK (tel>=0),
     CHECK (salario>=0),
     CHECK (id_local>=0),
     FOREIGN KEY (id_local) REFERENCES locales(id)
);
INSERT INTO empleados VALUES(11, 'juan', 3321, 10000, 1);
INSERT INTO empleados VALUES(22, 'predro', 321, 2000, 1);
INSERT INTO empleados VALUES(33, 'beto', 56543, 30000, 1);
INSERT INTO empleados VALUES(34, 'marcelo', 5653, 30000, 2);
INSERT INTO empleados VALUES(44, 'tio francisco', 6543, 50000, 2);


-- Creacion de tabla inventarios
CREATE TABLE IF NOT EXISTS inventarios(
    id_local int , 
    cod_producto int,
    existencia numeric NOT NULL,
    FOREIGN KEY (id_local) REFERENCES locales(id),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
    CHECK (id_local>=0),
    CHECK (cod_producto>=0),
    CHECK (existencia>=0));
INSERT INTO inventarios VALUES(1, 1, 100);
INSERT INTO inventarios VALUES(1, 2, 200);
INSERT INTO inventarios VALUES(2, 3, 300);
INSERT INTO inventarios VALUES(2, 1, 400);
INSERT INTO inventarios VALUES(2, 1, 500);



-- Creacion de tabla proveedores
CREATE TABLE IF NOT EXISTS proveedores (  
	 nit varchar(100) PRIMARY KEY,
     nombre varchar (100) NOT NULL,
     dir varchar (100) NOT NULL,
     tel varchar (10) UNIQUE NOT NULL,
     email varchar (100) UNIQUE NOT NULL,
     pag_web varchar (100)
);

INSERT INTO proveedores (nit, nombre, dir, tel, email, pag_web)
VALUES ('54', 'cemex S.A', 'calle 94 # 37', 5378877, 'cemex@gmail.com', 'www.cem.com' ),
       ('37', 'Corona', 'carrera 133 # 25', 23058866, 'coron@admin.com', 'www.coron.com.co'),
       ('63', 'ferre-tornillos', 'calle 13 #5-este', 6885527, 'ferretor@hotmai.com', 'www.fer-tor.com'),
       ('45', 'delta', 'calle 18 #20', 3843700, 'delta@outlook.com', 'www.delta.com' );

-- Creacion de tabla compras
CREATE TABLE IF NOT EXISTS compras( 
	codigo int PRIMARY KEY,
    fecha date NOT NULL,
    total numeric NOT NULL,
    nit_proveedor varchar(10) NOT NULL,
    FOREIGN KEY (nit_proveedor) REFERENCES proveedores(nit)
);

INSERT INTO compras (codigo, fecha, total, nit_proveedor)
VALUES (557, '1996-02-19', 50000, '54'),
       (896, '1996-02-19', 20000, '37'),
       (364, '1997-02-19', 13000, '63'),
       (256, '1997-02-19', 300000, '45');

-- Creacion de tabla detalle_compras
CREATE TABLE IF NOT EXISTS detalle_compras(
	id_detalle int NOT NULL, 
    cod_compra int NOT NULL, 
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_compra) REFERENCES compras(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo));

INSERT INTO detalle_compras (id_detalle, cod_compra, cod_producto, cantidad)
VALUES (123, 557, 1, 4),
       (124, 557, 2, 4),
       (125, 364, 3, 2),
       (126, 364, 1, 1);
	   
	   
	   
	   
