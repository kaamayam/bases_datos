-- Creacion de tabla clientes
CREATE TABLE IF NOT EXISTS `clientes` (  
`id` varchar(10) PRIMARY KEY,
     `nombre` varchar (100) NOT NULL,
     `dir` varchar (100),
     `tel` varchar (10) UNIQUE,
     `email` varchar (100) UNIQUE,
     `fecha_nac` date
);

INSERT INTO `clientes` (`id`, `nombre`,`dir`, `tel`, `email`,`fecha_nac`) 
VALUES ('1020473355', 'Pedro Pedroza Pérez', 'Cr 50 # 66-171 Robledo', '4522353', 'pedro12@hotmail.com', '1990-11-23'),
('43734932', 'Juan Mazo Pérez', 'Cr 51 # 80-171 Robledo', '3042158029', 'Juancho@gmail.com', '1996-09-23'),
('1001837372', 'Karina Mazo Ortega', 'Cr 70 # 77-102 Pachelly-Bello', '3048327326', 'cual@hotmail.com', '1996-02-19');;



-- Creacion de tabla locales
CREATE TABLE IF NOT EXISTS `locales` (  
`id` CHAR(1) PRIMARY KEY
);

INSERT INTO `locales` VALUES ('1'), ('2');


-- Creacion de tabla productos
CREATE TABLE IF NOT EXISTS productos(
codigo int PRIMARY KEY,
	nombre varchar(100) NOT NULL UNIQUE,
	tipo varchar(50) NOT NULL,
	precio numeric NOT NULL,
	descripcion varchar(1000) NOT NULL
);

INSERT INTO `productos` (`codigo`, `nombre`,`tipo`, `precio`,`descripcion`)
VALUES (1, 'Martillo de uña', 'Herramienta', 30000, 'Este tipo de martillo es muy usado por carpinteros y encofradores en el sector de la construcción. Dispone de una cabeza de golpeo algo pequeña en un extremo y por el otro lado, unas uñas que tienen como fin hacer palanca y extraer todo tipo de elementos de fijación: grapas, clavos, tornillos, etc.'),
(2, 'Hombresolo', 'Herramienta', 20000, 'son unas pinzas que pueden ser inmovilizadas en una cierta posición para así torcer o arrancar diversos objetos o materiales'),
(100, 'Arena construcción', 'Material', 10000, 'Es un tipo de agregado fino o árido que se utiliza para fabricar hormigón, concreto y mortero; se compone de partículas de rocas trituradas que pueden ser muy pequeñas y finas');

-- Creacion de tabla ventas
CREATE TABLE IF NOT EXISTS ventas( 
codigo int PRIMARY KEY AUTO_INCREMENT,
    fecha date NOT NULL,
    descuento numeric NOT NULL,
    forma_pago varchar(50) NOT NULL,
    id_cliente varchar(10) NOT NULL,
    id_local char(1) NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id),
    FOREIGN KEY (id_local) REFERENCES locales(id)
);

-- Creacion de tabla detalle_ventas
CREATE TABLE IF NOT EXISTS detalle_ventas(
    cod_venta int NOT NULL, 
    id_detalle int NOT NULL, 
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_venta) REFERENCES ventas(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
CONSTRAINT PK_DET_VENTAS PRIMARY KEY 
(cod_venta, id_detalle));


-- Creacion de tabla empleados
CREATE TABLE IF NOT EXISTS `empleados` (  
`id` varchar(10) PRIMARY KEY,
     `nombre` varchar (100) NOT NULL,
     `tel` varchar (10) UNIQUE NOT NULL,
     `salario` numeric NOT NULL,
     `id_local` char (1) NOT NULL,
     FOREIGN KEY (id_local) REFERENCES locales(id)
);

-- Creacion de tabla inventarios
CREATE TABLE IF NOT EXISTS inventarios(
    id_local char (1), 
    cod_producto int,
    existencia numeric NOT NULL,
    FOREIGN KEY (id_local) REFERENCES locales(id),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
CONSTRAINT PK_INVENTARIOS PRIMARY KEY 
(id_local, cod_producto));


-- Creacion de tabla proveedores
CREATE TABLE IF NOT EXISTS `proveedores` (  
`nit` varchar(100) PRIMARY KEY,
     `nombre` varchar (100) NOT NULL,
     `dir` varchar (100) NOT NULL,
     `tel` varchar (10) UNIQUE NOT NULL,
     `email` varchar (100) UNIQUE NOT NULL,
     `pag_web` varchar (100)
);

-- Creacion de tabla compras
CREATE TABLE IF NOT EXISTS compras( 
	codigo int PRIMARY KEY AUTO_INCREMENT,
    fecha date NOT NULL,
    total numeric NOT NULL,
    nit_proveedor varchar(10) NOT NULL,
    FOREIGN KEY (nit_proveedor) REFERENCES proveedores(nit)
);

INSERT INTO 'compras' (codigo, fecha, total, nit_proveedor)
VALUES (557, 24/12/2019, 50000, 54),
       (896, 25/03/2020, 20000, 37),
       (364, 11/04/2020, 13000, 63),
       (256, 08/08/2020, 300000, 45);

-- Creacion de tabla detalle_compras
CREATE TABLE IF NOT EXISTS detalle_compras(
    cod_compra int NOT NULL, 
    id_detalle int NOT NULL, 
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_compra) REFERENCES compras(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
CONSTRAINT PRI_DET_ORDENES PRIMARY KEY 
(cod_compra, id_detalle));

INSERT INTO 'detalle_compras' (cod_compra,id_detalle,cod_producto,cantidad)
VALUES (123, 1, 270, 4),
       (124, 2, 781, 4),
       (125, 3, 495, 2),
       (126, 4, 893, 1);
