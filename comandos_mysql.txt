/* Creacion clientes */
CREATE TABLE IF NOT EXISTS clientes(
    id bigint PRIMARY KEY,
    nombre varchar (100) NOT NULL,
    dir varchar (100),
    tel bigint,
    email varchar (100) UNIQUE,
    fecha_nac date,
    CHECK (id>=0 and id < 10000000000),
	CHECK (tel >= 0 and tel < 10000000000));

INSERT INTO clientes(id, nombre,dir, tel, email,fecha_nac) 
VALUES (12234563, 'Pedro Pedroza Pérez', 'Cr 50 # 66-171 Robledo', 4512309, 'pedro12@hotmail.com', '1970-11-23'),
(43723453, 'Juan Mazo Pérez', 'Cr 51 # 80-171 Robledo', 3014489030, 'Juancho@gmail.com', '1976-09-23'),
(1001812345, 'Karina Mazo Ortega', 'Cr 70 # 77-102 Pachelly-Bello', 3048356, 'karim@hotmail.com', '1996-02-19'),
(1110557755, 'Miguel Angel Osorio', 'Cr 39 # 20-31 Boquerón', 3115604078, 'hebermudezg@hotmail.com', '1995-03-25');


/* creacion locales */
CREATE TABLE locales (  
	id int PRIMARY KEY,
	id_encargado int,
	CHECK (id > 0)
);
INSERT INTO locales VALUES (1, 1110557755), (2, 111077765);


/* Creacion de tabla productos */
CREATE TABLE IF NOT EXISTS productos(
	codigo int PRIMARY KEY,
	nombre varchar(100) NOT NULL UNIQUE,
	tipo varchar(50) NOT NULL,
	precio numeric NOT NULL,
	descripcion varchar(1000) NOT NULL,
	CHECK (codigo > 0),
	CHECK (precio >= 0)
);

INSERT INTO productos(codigo, nombre, tipo, precio, descripcion)
VALUES 
(1, 'Martillo de uña', 'Herramienta', 30000, 'Este tipo de martillo es muy usado por carpinteros y encofradores en el sector de la construcción. Dispone de una cabeza de golpeo algo pequeña en un extremo y por el otro lado, unas uñas que tienen como fin hacer palanca y extraer todo tipo de elementos de fijación: grapas, clavos, tornillos, etc.'),
(2, 'Hombresolo', 'Herramienta', 20000, 'son unas pinzas que pueden ser inmovilizadas en una cierta posición para así torcer o arrancar diversos objetos o materiales'),
(3, 'Arena construcción', 'Material', 10000, 'Es un tipo de agregado fino o árido que se utiliza para fabricar hormigón, concreto y mortero; se compone de partículas de rocas trituradas que pueden ser muy pequeñas y finas'),
(4, 'Ladrillos', 'Material', 200, 'Ladrillos super resisitentes'),
(5, 'Cemento', 'Material', 500, 'Cemernto de Argos');

-- Creacion de tabla ventas
CREATE TABLE IF NOT EXISTS ventas( 
	codigo int PRIMARY KEY,
    fecha date NOT NULL,
    descuento numeric NOT NULL,
    forma_pago varchar(50) NOT NULL,
    id_cliente bigint NOT NULL,
    id_local int NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id),
    FOREIGN KEY (id_local) REFERENCES locales(id),
    CHECK (codigo>=0)
);

INSERT INTO ventas VALUES(1,'1996-02-1', 2, 'credito', 12234563, 1);
INSERT INTO ventas VALUES(2,'1997-03-1', 3, 'debito', 12234563, 2);
INSERT INTO ventas VALUES(3, '1998-04-2', 2, 'en efectivo sumerce', 12234563, 2);
INSERT INTO ventas VALUES(4, '1999-05-6', 2, 'en efectivo sumerce', 1110557755, 2);
INSERT INTO ventas VALUES(5, '2000-06-8', 2, 'en efectivo sumerce', 1110557755, 2);


-- Creacion de tabla detalle_ventas
CREATE TABLE IF NOT EXISTS detalle_ventas(  
	cod_venta int NOT NULL,
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_venta) REFERENCES ventas(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
    CHECK (cod_venta>=0),
    CHECK (cod_producto>=0),
    CHECK (cantidad>=0),
CONSTRAINT PK_DET_VENTAS PRIMARY KEY 
(cod_venta, cod_producto));
INSERT INTO detalle_ventas VALUES(1, 1, 10);
INSERT INTO detalle_ventas VALUES(1, 2, 20);
INSERT INTO detalle_ventas VALUES(2, 3, 800);
INSERT INTO detalle_ventas VALUES(2, 5, 600);
INSERT INTO detalle_ventas VALUES(3, 5, 800);
INSERT INTO detalle_ventas VALUES(5, 5, 100);
INSERT INTO detalle_ventas VALUES(4, 1, 900);


-- Creacion de tabla empleados
CREATE TABLE IF NOT EXISTS empleados(  
	 id bigint PRIMARY KEY,
     nombre varchar (100) NOT NULL,
     tel bigint NOT NULL,
     salario numeric NOT NULL,
     id_local int NOT NULL,
     CHECK (id>=0 and id < 10000000000),
     CHECK (tel>=0 and tel < 10000000000),
     CHECK (salario>=0),
     CHECK (id_local>=0),
     FOREIGN KEY (id_local) REFERENCES locales(id)
);
INSERT INTO empleados VALUES(111077765, 'Juan Hernandez', 3321, 10000, 1);
INSERT INTO empleados VALUES(100076544, 'Pablo Jaramillo Duarte', 321, 2000, 1);
INSERT INTO empleados VALUES(312333211, 'Beto Molina Betancur', 56543, 30000, 1);
INSERT INTO empleados VALUES(657767844, 'Marcelo Arango Piedrahita', 5653, 30000, 2);
INSERT INTO empleados VALUES(413234444, 'Francisco Soler Monsalve', 6543, 50000, 2);


-- Creacion de tabla inventarios
CREATE TABLE IF NOT EXISTS inventarios(
    id_local int , 
    cod_producto int,
    existencia numeric NOT NULL,
    FOREIGN KEY (id_local) REFERENCES locales(id),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
    CHECK (id_local>=0),
    CHECK (cod_producto>=0),
    CHECK (existencia>=0));
INSERT INTO inventarios VALUES(1, 1, 100);
INSERT INTO inventarios VALUES(1, 2, 200);
INSERT INTO inventarios VALUES(1, 3, 300);
INSERT INTO inventarios VALUES(1, 4, 400);
INSERT INTO inventarios VALUES(1, 5, 500);
INSERT INTO inventarios VALUES(2, 1, 400);
INSERT INTO inventarios VALUES(2, 2, 500);



-- Creacion de tabla proveedores
CREATE TABLE IF NOT EXISTS proveedores (  
	 nit varchar(100) PRIMARY KEY,
     nombre varchar (100) NOT NULL,
     dir varchar (100) NOT NULL,
     tel bigint NOT NULL,
     email varchar (100) UNIQUE NOT NULL,
     pag_web varchar (100)
);

INSERT INTO proveedores (nit, nombre, dir, tel, email, pag_web)
VALUES ('54', 'cemex S.A', 'calle 94 # 37', 5378877, 'cemex@gmail.com', 'www.cem.com' ),
       ('37', 'Corona', 'carrera 133 # 25', 23058866, 'coron@admin.com', 'www.coron.com.co'),
       ('63', 'ferre-tornillos', 'calle 13 #5-este', 6885527, 'ferretor@hotmai.com', 'www.fer-tor.com'),
       ('45', 'delta', 'calle 18 #20', 3843700, 'delta@outlook.com', 'www.delta.com' );

-- Creacion de tabla compras
CREATE TABLE IF NOT EXISTS compras( 
	codigo int PRIMARY KEY,
    fecha date NOT NULL,
    total numeric NOT NULL,
    nit_proveedor varchar(10) NOT NULL,
    FOREIGN KEY (nit_proveedor) REFERENCES proveedores(nit)
);

INSERT INTO compras (codigo, fecha, total, nit_proveedor)
VALUES (557, '2019-02-19', 50000, '54'),
       (896, '2020-02-19', 20000, '37'),
       (364, '2020-02-19', 13000, '63'),
       (256, '2020-02-19', 300000, '45');

-- Creacion de tabla detalle_compras
CREATE TABLE IF NOT EXISTS detalle_compras(
    cod_compra int NOT NULL, 
    cod_producto int NOT NULL,
    cantidad numeric NOT NULL,
    FOREIGN KEY (cod_compra) REFERENCES compras(codigo),
    FOREIGN KEY (cod_producto) REFERENCES productos(codigo),
	CONSTRAINT PK_DET_COMPRAS PRIMARY KEY (cod_compra, cod_producto));

INSERT INTO detalle_compras (cod_compra, cod_producto, cantidad)
VALUES (557, 1, 400),
       (896, 2, 400),
       (364, 3, 200),
       (256, 1, 1000);